"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Potrace;
(function (Potrace) {
    Potrace["COLOR_AUTO"] = "auto";
    Potrace["COLOR_TRANSPARENT"] = "transparent";
    Potrace[Potrace["THRESHOLD_AUTO"] = -1] = "THRESHOLD_AUTO";
})(Potrace = exports.Potrace || (exports.Potrace = {}));
var Posterizer;
(function (Posterizer) {
    Posterizer[Posterizer["STEPS_AUTO"] = -1] = "STEPS_AUTO";
})(Posterizer = exports.Posterizer || (exports.Posterizer = {}));
var PotraceRangeDistributionPolicy;
(function (PotraceRangeDistributionPolicy) {
    PotraceRangeDistributionPolicy["RANGES_AUTO"] = "auto";
    PotraceRangeDistributionPolicy["RANGES_EQUAL"] = "equal";
})(PotraceRangeDistributionPolicy = exports.PotraceRangeDistributionPolicy || (exports.PotraceRangeDistributionPolicy = {}));
var PotraceFillPolicy;
(function (PotraceFillPolicy) {
    PotraceFillPolicy["FILL_SPREAD"] = "spread";
    PotraceFillPolicy["FILL_DOMINANT"] = "dominant";
    PotraceFillPolicy["FILL_MEDIAN"] = "median";
    PotraceFillPolicy["FILL_MEAN"] = "mean";
    PotraceFillPolicy["FILL_NONE"] = "none";
})(PotraceFillPolicy = exports.PotraceFillPolicy || (exports.PotraceFillPolicy = {}));
var PotraceTurnPolicy;
(function (PotraceTurnPolicy) {
    PotraceTurnPolicy["TURNPOLICY_BLACK"] = "black";
    PotraceTurnPolicy["TURNPOLICY_WHITE"] = "white";
    PotraceTurnPolicy["TURNPOLICY_LEFT"] = "left";
    PotraceTurnPolicy["TURNPOLICY_RIGHT"] = "right";
    PotraceTurnPolicy["TURNPOLICY_MINORITY"] = "minority";
    PotraceTurnPolicy["TURNPOLICY_MAJORITY"] = "majority";
})(PotraceTurnPolicy = exports.PotraceTurnPolicy || (exports.PotraceTurnPolicy = {}));
// // TODO: types to that project and remove this:
// export interface ImageTraceOptions {
//   // /**
//   //   * Path or glob file pattern to .png files, relative to current dir.
//   //   */
//   // input: string 
//   // /**
//   //  * Folder for output files. If it doesn't exists it will be created. If none, output files will be written
//   //  * in current folder.
//   //  */
//   // output?: string
//   // /**
//   //  *  Print usage information, then exit.
//   //  */
//   // help?: boolean
//   // /**
//   //  *  Prints debug messages. 
//   //  */
//   // debug?: boolean
//   // /**
//   //  * output file format. Currently only svg is supported
//   //  */
//   // format?: 'svg'
//   /**
//    * Error threshold for straight lines. Default value: 1. 
//    */
//   ltres?: number
//   /**
//    * Error threshold for quadratic splines. Default value: 1.
//    */
//   imagetracerjs_qtres?: number
//   /**
//    * 	Edge node paths shorter than this will be discarded for noise reduction. Default value: 8.
//    */
//   imagetracerjs_pathomit?: number
//   /**
//    * Enhance right angle corners. Default value: 1.
//    */
//   imagetracerjs_rightangleenhance?: boolean
//   /**
//    * 0: disabled, generating a palette; 1: random sampling; 2: deterministic sampling. Default value: 2.
//    */
//   imagetracerjs_colorsampling?: 0 | 1 | 2 //TODO: enum
//   /**
//    * 	Number of colors to use on palette if pal object is not defined. Default value: 16.
//    */
//   imagetracerjs_numberofcolors?: number
//   /**
//    * 	Color quantization will randomize a color if fewer pixels than (total pixels*mincolorratio) has it.
//    * 	Default value: 0.
//    */
//   imagetracerjs_mincolorratio?: number
//   /**
//    *  Color quantization will be repeated this many times. Default value: 3.
//    */
//   imagetracerjs_colorquantcycles?: number
//   /**
//    * 0: sequential ; 1: parallel
//    */
//   imagetracerjs_layering?: 0 | 1//TODO: enum
//   /**
//    *  SVG stroke-width. Default value: 1.
//    */
//   imagetracerjs_strokewidth?: number
//   /**
//    *  Enable or disable line filter for noise reduction. Default value: false.
//    */
//   imagetracerjs_linefilter?: boolean
//   /**
//    *  Every coordinate will be multiplied with this, to scale the SVG. Default value: 1.
//    */
//   imagetracerjs_scale?: number
//   /**
//    *  rounding coordinates to a given decimal place. 1 means rounded to 1 decimal place like 7.3 ; 3 means
//    *  rounded to 3 places, like 7.356. Default value: 1.
//    */
//   imagetracerjs_roundcoords?: number
//   /**
//    *  Enable or disable SVG viewbox. Default value: false.
//    */
//   imagetracerjs_viewbox?: boolean
//   /**
//    *  Enable or disable SVG descriptions. Default value: false.
//    */
//   imagetracerjs_desc?: boolean
//   /**
//    *  	Set this to 1..5 for selective Gaussian blur preprocessing. Default value: 0.
//    */
//   imagetracerjs_blurradius?: number
//   /**
//    *  	RGBA delta treshold for selective Gaussian blur preprocessing. Default value: 20.
//    */
//   imagetracerjs_blurdelta?: number
//   // layercontainerid No default value  Edge node layers can be visualized if a container div's id is defined.
//   // lcpr 0 Straight line control point radius, if this is greater than zero, small circles will be drawn in
//   // the SVG. Do not use this for big/complex images. qcpr 0 Quadratic spline control point radius, if this is
//   // greater than zero, small circles and lines will be drawn in the SVG. Do not use this for big/complex
//   // images. Initial palette Option name  Default value Meaning pal  No default value  Custom palette, an
//   // array of color objects: [ {r:0,g:0,b:0,a:255}, ... ]
// }
//# sourceMappingURL=types.js.map